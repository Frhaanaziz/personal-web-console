generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

// model Post {
//     id        Int      @id @default(autoincrement())
//     name      String
//     createdAt DateTime @default(now())
//     updatedAt DateTime @updatedAt

//     createdBy   User   @relation(fields: [createdById], references: [id])
//     createdById String

//     @@index([name])
// }

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId]) // manual
}

model User {
  id             String    @id @default(cuid())
  name           String
  email          String    @unique
  emailVerified  Boolean   @default(false)
  image          String?
  hashedPassword String?
  role           String    @default("user")
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  accounts       Account[]
}

model Keyword {
  id        String    @id @default(cuid())
  keyword   String
  group     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Content   Content[]
}

model Content {
  id        String   @id @default(cuid())
  keyword   Keyword  @relation(fields: [keywordId], references: [id])
  keywordId String
  content   String
  locale    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([keywordId, locale])
}
